@page "/AddFile"



@using DM.BLL.Services
@using DocumentMaster.BlazorServer.Authentication
@using DocumentMaster.BlazorServer.Pages
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Models

@inject FileService fileService
@inject DepartmentService departmentService
@inject PersonService personService
@inject ProjectService projectService
@inject DialogService DialogService
@inject NavigationManager Navigation



<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<AuthorizeView>
    <Authorized>
        <h3>AddFile</h3>
        <RadzenTemplateForm Context="Context1" Data="@_file" Submit="@((FileDTO args) => { Submit(args);})">
            <div class="row">
                <div class="col-md-10">
                    <RadzenFieldset Text="Загрузка файла на сервер">
                        <div class="row">
                            <div class="col-md-8">
                <RadzenDropDownDataGrid @bind-Value="@n" TValue="int" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" AllowClear="true"
                                        Data=@(Projects.Select(p=>p.Id).ToList())
                                        Change=@(args => OnChange(args, "DropDownDataGrid")) Style="width: 100%"/>
                            </div>                          
                        </div>
                        <br>
                        <div class="col-md-4">
                            <RadzenTextBox style="width: 100%;" @bind-Value="_file.Name" Name="Название" />
                        </div>
                    </RadzenFieldset>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" style="display: inline-block; margin-left: 10px;" Text="Save" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel" Click="@Cancel" />
                </div>
            </div>
        </RadzenTemplateForm>
        </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private FileDTO _file = new FileDTO();
    private PersonDTO CurrentPerson { get; set; }
    private IList<ProjectDTO> Projects;
    private int n = 1;


    protected override async void OnInitialized()
    {
        CurrentPerson = new PersonDTO();
        var authState = await authenticationState;
        CurrentPerson = await personService.GetPersonByNameAsync(authState.User.Identity.Name);
        var p=await projectService.GetProjectsListAsync();
        Projects = p.ToList();


    }

    async void Submit(FileDTO arg)
    {
        var authState = await authenticationState;
        CurrentPerson = await personService.GetPersonByNameAsync(authState.User.Identity.Name);
        arg.DepartmentId = CurrentPerson.DepartmentId;
        var result= await fileService.AddFileAsync(arg,CurrentPerson.Id);

        if (result != null)
        {
            Navigation.NavigateTo("/Files");
        }

    }
  

    void OnChange(object value, string s)
    {
        _file.ProjectId = (int)value;
    }

        void Cancel()
    {
        //
    }


}
