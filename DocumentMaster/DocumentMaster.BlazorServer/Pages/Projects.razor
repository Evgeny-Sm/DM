@page "/Projects"




@using DM.BLL.Services
@using DM.DAL.Models
@using Models
@using DocumentMaster.BlazorServer.Pages
@using Microsoft.EntityFrameworkCore


@inject NavigationManager Navigation
@inject PersonService personService
@inject ProjectService projectService
@inject DMContext db



<h3>Projects</h3>

<div class="row">
    <div class="col-md-6">
        <AuthorizeView Roles="admin,head">
            <Authorized>
                <RadzenButton Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary"
                              Text="Добавить" Click="@NavigatetoToAddProject" />
            </Authorized>
        </AuthorizeView>
    </div>
    <div class="col-md-6">
        @if (SelectedFiles.Count != 0)
        {
            <DownloadFile SelectedFiles="@SelectedFiles" />
        }
    </div>

</div>

<AuthorizeView>
    <Authorized>
        <div class="row">
            <div class="col-md-6">
                <ProjectList ProjectsGetCallBack="@SetSelectedProjects" />
            </div>
            <div class="col-md-6">
                @if (SelectedProjects.Count != 0)
                {
                    <InfoProject SelectedProjects="@SelectedProjects"/>
                    <FileList FilesGetCallBack="@SetSelectedFiles" files="@GetFilesInProject(SelectedProjects.FirstOrDefault().Id)" > </FileList>
                }
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {

    private IList<ProjectDTO> SelectedProjects { get; set; }

    private IList<FileUnit> SelectedFiles { get; set; }

    private IEnumerable<ProjectDTO> _projects { get; set; }


    protected override async void OnInitialized()
    {
        SelectedProjects = new List<ProjectDTO>();
        SelectedFiles = new List<FileUnit>();

    }
    
    

    private void SetSelectedProjects(IList<ProjectDTO> projects)
    {
        if (projects != null)
        {
            SelectedProjects = projects;
        }

    }

        private void SetSelectedFiles(IList<FileUnit> fileUnit)
    {
        if (fileUnit != null)
        {
            SelectedFiles = fileUnit;
        }
    }


    private IEnumerable<FileUnit> GetFilesInProject(int id)
    {
        
        return db.FileUnits.Where(f => f.ProjectId == id).Include(a => a.UserActions).ToArray();

    }

    private void NavigatetoToAddProject()
    {
        Navigation.NavigateTo("/AddProject");
    }
}
