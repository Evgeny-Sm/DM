@page "/Projects"




@using DM.BLL.Services
@using DM.DAL.Models
@using Models
@using DocumentMaster.BlazorServer.Pages
@using Microsoft.EntityFrameworkCore


@inject NavigationManager Navigation
@inject PersonService personService
@inject ProjectService projectService
@inject DMContext db

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<h3>Projects</h3>

<AuthorizeView Roles="admin,head">
    <Authorized>
        <RadzenButton Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary"
                      Text="Добавить" Click="@NavigatetoToAddProject" />
    </Authorized>
</AuthorizeView>

<AuthorizeView>
    <Authorized>
        <div class="row">
            <div class="col-md-6">
                <RadzenDataGrid Data="@_projects" TItem="ProjectDTO" @bind-Value="@SelectedProjects" AllowVirtualization="true" Style="height:800px"
                                AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                                AllowSorting="true">
                    <Columns>
                        <RadzenDataGridColumn TItem="ProjectDTO" Property="Id" Title="Id" Width="30px" />
                        <RadzenDataGridColumn TItem="ProjectDTO" Property="Name" Title="Название" Width="250px" />
                        <RadzenDataGridColumn TItem="ProjectDTO" Property="Client" Title="Заказчик" Width="50px" />
                    </Columns>
                </RadzenDataGrid>
            </div>
            <div class="col-md-6">
                @if (SelectedProjects.Count != 0)
                {
                    <RadzenCard Style="margin-bottom:20px">
                        <b>ГИП: @GetDeveloper()   </b>                       
                        <div >Файлов в проекте: @CountFiles  </div>
                    </RadzenCard>
                    <Files files="@GetFilesInProject(SelectedProjects.FirstOrDefault().Id)" > </Files>
                }
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {

    private IList<ProjectDTO> SelectedProjects { get; set; }

    private IEnumerable<ProjectDTO> _projects { get; set; }

    private IEnumerable<PersonDTO> Persons { get; set; }

    private int CountFiles => Task.Run(() => projectService.GetProjectByIdAsync(SelectedProjects.FirstOrDefault().Id)).GetAwaiter().GetResult().FilesCount;

    protected override async void OnInitialized()
    {
        SelectedProjects = new List<ProjectDTO>();

        Persons =await personService.GetPersonsAsync();

        _projects = await projectService.GetProjectsListAsync();

        StateHasChanged();
    }

    private string GetDeveloper()
    {
        if (SelectedProjects.Count == 0)
        {
            return null;
        }
        var perId = SelectedProjects.FirstOrDefault().MainIngId;

        PersonDTO p =Persons.Where(p=>p.Id==perId).Single();
        if (p != null)
        {
            return $"{p.FirstName} {p.LastName}";
        }
        return null;
    }

    private IEnumerable<FileUnit> GetFilesInProject(int id)
    {
        
        return db.FileUnits.Where(f => f.ProjectId == id).Include(a => a.UserActions).ToArray();

    }

    private void NavigatetoToAddProject()
    {
        Navigation.NavigateTo("/AddProject");
    }
}
