@page "/"
@using DocumentMaster.BlazorServer.Authentication
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Models
@using System.IO


@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject ProtectedSessionStorage sessionStorage





<PageTitle>Index</PageTitle>

<AuthorizeView>
    <Authorized>
        <h1>Hello, @context.User.Identity.Name!</h1>
    </Authorized>
    <NotAuthorized>
        <h1>Hello, Guest!</h1>
    </NotAuthorized>
</AuthorizeView>

Welcome to your new app.



<SurveyPrompt Title="How is Blazor working for you?" />

<AuthorizeView>
    <Authorized>
        <br /><br />
        <button class="btn btn-btn-outline-primary" @onclick="DisplayGreetingAlert">Display Greeting Alert</button>
    </Authorized>
</AuthorizeView>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    RadzenUpload upload;
    int progress;
    string info;
    string Nname;
    bool showProgress;
    bool showComplete;


    private async Task DisplayGreetingAlert()
    {
        var authState = await authenticationState;
        var b=authState.User.IsInRole("user");
        var userSessionStorageResult = await sessionStorage.GetAsync<UserSession>("UserSession");
        var personId = userSessionStorageResult.Value.PersonId;
        var message = $"Hello {authState.User.Identity.Name} {personId} {b}";
        await JS.InvokeVoidAsync("alert", message);
    }

    void OnProgress(UploadProgressArgs args, string name)
    {
        this.info = $"%'{name}'/{args.Loaded} of {args.Total} bytes";
        this.progress = args.Progress;
    }

}