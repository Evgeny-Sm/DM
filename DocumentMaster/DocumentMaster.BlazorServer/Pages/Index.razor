@page "/"
@using DocumentMaster.BlazorServer.Services
@attribute [Authorize]

@inject NavigationManager Navigation


@inject IConfiguration Configuration
@inject IHttpContextAccessor HttpContextAccessor

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>


Welcome to your new app.
@ResponsMes
<div class="row px-3">
    <div class="col-md-9">
        <div class="row">
            <div class="col-md-4 p-3">
                <RadzenCard>
                    <h4 class="mb-4">Single file upload</h4>
                    <RadzenUpload Url="upload/single" Progress=@(args => OnProgress(args, "Single file upload")) class="w-100">
                    </RadzenUpload>
                </RadzenCard>
            </div>
        </div>
    </div>
</div>


<SurveyPrompt Title="How is Blazor working for you?" />

@code
{

    RadzenUpload upload;
    int progress;
    bool showProgress;
    bool showComplete;
    string ResponsMes="привет";
    string RequestUri;
    string Token;


    protected override async void OnInitialized()
    {
        //RequestUri = Configuration.GetConnectionString("ApiHost") + "/File/Upload?fileUnitId=1";
        //Token = HttpContextAccessor.HttpContext.Request.Cookies["token"];

    }

    void OnProgress(UploadProgressArgs args, string name)
    {
        
        /*var req = new ApiRequestService<FormFile>(Configuration, HttpContextAccessor);


        foreach (var file in args.Files)
        {
            var gg = File.ReadAllBytes(file.Name);
            var byteArrayContent = new ByteArrayContent(gg);
            var content = new MultipartFormDataContent();
            content.Add(byteArrayContent, "pdfFile", file.Name);

            string requestUri = Configuration.GetConnectionString("ApiHost") + "/Upload?id=1";
            string token = HttpContextAccessor.HttpContext.Request.Cookies["token"];

            var request = new HttpRequestMessage(HttpMethod.Post, requestUri);
            request.Headers.Add("Accept", "multipart/form-data");
            request.Headers.Add("User-Agent", "HTTPClient-client");
            request.Headers.Add("Authorization", $"Bearer {token}");
            request.Content = content;
            var client = new HttpClient();
            var responce = client.SendAsync(request).Result;
            ResponsMes = responce.IsSuccessStatusCode.ToString();
            
            ResponsMes = file.Name;
        }*/
        
    }

}