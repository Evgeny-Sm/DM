@page "/loginform"

@using System.Web
@using DocumentMaster.BlazorServer.Services
@using Microsoft.AspNetCore.Http
@using Models

@inject NavigationManager Navigation
@inject AuthenticationStateProvider context
@inject IHttpContextAccessor HttpContextAccessor




<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />

<div  class="row d-flex px-3">
    <div class="col-xl-4 d-flex p-3">
        <RadzenCard Style="width: 60%;">
            <h2 class="mb-4">Log in</h2>
            <input type="text"
                   placeholder="User Name" size="20"
                   @bind="@Username" />
            &nbsp; &nbsp;&nbsp;&nbsp;
            <input type="password"
                   placeholder="Password" size="20"
                   @bind="@Password" />
            &nbsp; &nbsp;
            <a class="ml-md-auto btn btn-primary"
               href="Account/login?paramUsername=@encode(@Username)&paramPassword=@encode(@Password)" onclick=""
               target="_top">Login</a>
            &nbsp;
            <span class="validation-message"> @SetStatus() </span>           

        </RadzenCard>
    </div>
</div>


@code {
    string Username = "";
    string Password = "";
    string Status = "";



    private string encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }
    private string SetStatus()
    {
        string result = String.Empty;
        Status=HttpContextAccessor.HttpContext.Session.GetString("apiAuthMes");
        if (String.IsNullOrEmpty(Status))
        {
            return String.Empty;
        }
        if (Status.Contains("Bad"))
        {
            result = "Ошибка в имени пользователя или пароле";
        }
        return result;

    }
    private AccountDTO CheckUser(string login, string password)
    {
        var acc = new AccountDTO
            {
                UserName = login,
                Password = password
            };
        return acc;

    }



}
