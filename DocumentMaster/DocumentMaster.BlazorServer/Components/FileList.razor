@using DM.BLL.Services
@using DM.DAL.Models
@using DocumentMaster.BlazorServer.Pages
@using Microsoft.EntityFrameworkCore
@using Models
@using System.Text.Json

@inject FileService fileService
@inject DMContext db

<AuthorizeView>
    <Authorized>
        <RadzenDataGrid Data="@files" TItem="FileUnit" ValueChanged="@(args=>ValueChanged(args))" AllowVirtualization="true" Style="height:800px"
                        AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.Or"
                        AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="FileUnit" Property="Id" Title="Id" Width="50px" />
                <RadzenDataGridColumn TItem="FileUnit" Property="Name" Title="Название" Width="250px" />
                <RadzenDataGridColumn TItem="FileUnit" Property="ProjectId" Title="Номер проекта" Width="50px" />
            </Columns>
        </RadzenDataGrid>
    </Authorized>
</AuthorizeView>




@code {

    IList<FileUnit> SelectedFiles { get; set; }

    [Parameter] 
    public IEnumerable<FileUnit>? files { get; set; }

    [Parameter]
    public EventCallback<IList<FileUnit>> FilesGetCallBack { get; set; }


    protected override async void OnInitialized()
    {

    }
    protected override async Task OnParametersSetAsync()
    {
        if (files == null)
        {
            files = db.FileUnits.Include(f => f.UserActions).ToArray();
        }


    }
    private async void ValueChanged(IList<FileUnit> args)
    {
        await FilesGetCallBack.InvokeAsync(args);
    }


}
