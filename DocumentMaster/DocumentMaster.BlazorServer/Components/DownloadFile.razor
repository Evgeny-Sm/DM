@using DM.BLL.Services
@using DM.DAL.Models
@using DocumentMaster.BlazorServer.Pages
@using Microsoft.EntityFrameworkCore
@using Models
@using System.Text.Json

@inject IConfiguration Configuration
@inject IJSRuntime JS
@inject IWebHostEnvironment WebHostInvironment

<RadzenButton Click=@(args => DownloadFileFromStream()) ButtonStyle="ButtonStyle.Secondary" Text="Скачать" />

@code {
    [Parameter]
    public IList<FileUnit> SelectedFiles { get; set; }



    private async Task DownloadFileFromStream()
    {
        if (SelectedFiles != null)
        {
            try
            {
                var name = SelectedFiles.FirstOrDefault().Name;
                var downloadPath = WebHostInvironment.WebRootPath + Configuration.GetRequiredSection("ProjectRootDir").Value
                                    + $"\\{SelectedFiles.FirstOrDefault().ProjectId}" + $"\\{name}";

                var fileStream = File.OpenRead(@$"{downloadPath}");

                using var streamRef = new DotNetStreamReference(stream: fileStream);
                await JS.InvokeVoidAsync("downloadFileFromStream", name, streamRef);
            }
            catch
            { 
                await JS.InvokeVoidAsync("alert", "ошибка загрузки файла");
            }

        }
    }

}
