@using DM.BLL.Services
@using DM.DAL.Models
@using Models
@using Microsoft.EntityFrameworkCore;

@inject DialogService DialogService
@inject IJSRuntime JS
@inject NavigationManager Navigation




<RadzenCard Style="width: 100%; overflow: hidden;">
    <br />
    <div class="row">
        <div class="col-md-4 align-items-center d-flex">
            <RadzenLabel Text="Описание" />
        </div>
        <div class="col">
            <RadzenTextArea Style="width:inherit" @bind-Value="ResultCheck.Description" Name="ProjectName" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-4 align-items-center d-flex">
            <RadzenLabel Text="Время на проверку(часов)" />
        </div>
        <br />
        <div class="col-md-4">
            <RadzenTextBox style="width: 100%;" @bind-Value="ResultCheck.AdditionalTime" Name="AddTime" />
        </div>
    </div>

    <br />
    <div>
        <RadzenButton Size="Radzen.ButtonSize.Small" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Text="Утвердить" Click=@(args => Submit()) />
        <RadzenButton Size="Radzen.ButtonSize.Small" ButtonStyle="ButtonStyle.Danger" Text="Вернуть" Click=@(args => Denied()) />
    </div>
</RadzenCard>

@code {
    private ResultCheck ResultCheck { get; set; } = new();


    private  void Submit()
    {

        if (!double.TryParse(ResultCheck.AdditionalTime, out double t))
        {
            ResultCheck.AdditionalTime = "0";
        }
        ResultCheck.IsConfirmed = true;

        DialogService.Close(ResultCheck);

    }
    private  void Denied()
    {
        if (!double.TryParse(ResultCheck.AdditionalTime, out double t))
        {
            ResultCheck.AdditionalTime = "0";
        }
        ResultCheck.IsConfirmed = false;

        DialogService.Close(ResultCheck);
    }



}
