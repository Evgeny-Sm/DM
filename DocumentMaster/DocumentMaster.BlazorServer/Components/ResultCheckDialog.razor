@using DM.BLL.Services
@using DM.DAL.Models
@using Models
@using Microsoft.EntityFrameworkCore;

@inject DialogService DialogService
@inject IJSRuntime JS
@inject NavigationManager Navigation




<RadzenCard Style="width: 100%; overflow: hidden;">

    <div>
        <RadzenLabel Text="Время на проверку(часов)" />
    </div>
    <br />
    <div class="col-md-8">
        <RadzenTextBox style="width: 100%;" @bind-Value="AdditionalTime" Name="AddTime" />
    </div>

    <br />
    <div>
        <RadzenButton Size="Radzen.ButtonSize.Small" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Text="Ok" Click=@(args => Submit()) />
    </div>
</RadzenCard>

@code {

    private string AdditionalTime { get; set; } = "0";


    protected override void OnInitialized()
    {

    }

    protected override async Task OnParametersSetAsync()
    {

    }

    private async Task Submit()
    {
        double time;
        if (double.TryParse(AdditionalTime, out double t))
        {
            time= t;
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Введите время на доработку в часах или 0");
            return;
        }
        DialogService.Close(time);

    }


}
